---
# code: language=ESPHome

substitutions:
  devicename: rfbridge
  friendly_devicename: RF Bridge
  mqtt_server: mqtt.lan
  mqtt_user: esphome

esphome:
  name: $devicename
  platform: ESP8266
  board: esp8285
  esp8266_restore_from_flash: yes

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: ".lan"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_devicename}"
    password: !secret ap_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API & OTA Updates
api:
  password: !secret api_password
ota:
  password: !secret ota_password

# Enable Web Server.
web_server:
  port: 80

# Enable MQTT
mqtt:
  broker: $mqtt_server
  username: $mqtt_user
  password: !secret mqtt_password
  birth_message:
    topic: $devicename/status
    payload: online
  will_message:
    topic: $devicename/status
    payload: offline

# Ensure Time Sync with Home Assistant
time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: America/Toronto

status_led:
  pin:
    number: GPIO13
    inverted: yes

# USBRX = GPIO4 ---> receiver
# USBTX = GPIO5 ---> trasmitter

# receiver = pin 5 of the 8-legged chip (the one closer to the wifi antenna)
# transmitter = pin 4 of the 6-legged chip (closest to r12)

remote_receiver:
  pin: GPIO04
  dump: raw
  # dump: all
  # dump:
    # - coolix
    # - dish
    # - jvc
    # - lg
    # - magiquest
    # - midea
    # - nec
    # - nexa
    # - panasonic
    # - pioneer
    # - raw
    # - rc5
    # - rc_switch
    # - samsung
    # - samsung36
    # - sony
    # - toshiba_ac
  # tolerance: 50%
  # filter: 250us
  # idle: 4ms
  # buffer_size: 2kb
  tolerance: 50%
  filter: 35us
  idle: 2ms

remote_transmitter:
  pin: GPIO05
  carrier_duty_percent: 100%

binary_sensor:
- platform: status
  name: "${friendly_devicename}: Status"

sensor:
  - platform: wifi_signal
    name: "${friendly_devicename}: WiFi Signal"
    update_interval: 60s

# this will log received commands, and can also transmit. Read up here:
# https://esphome.io/components/remote_transmitter.html#remote-setting-up-rf

button:
  - platform: restart
    name: "${friendly_devicename}: Restart"
    icon: "mdi:restart"
    device_class: "restart"
